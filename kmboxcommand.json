[
  "b64alp = \"QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm0123456789+/\"",
  "kmbox_init = True",
  "",
  "",
  "",
  "",
  "",
  "def nkb4(s,w):return s if len(s)>=w else'0'*(w-len(s))+s",
  "",
  "",
  "",
  "",
  "",
  "",
  "def nkb1(c):",
  "return nkb4(bin(b64alp.index(c[0]))[2:], 6)[:6] + nkb4(bin(b64alp.index(c[1]))[2:], 6)[:6] + nkb4(bin(b64alp.index(c[2]))[2:], 6)[:6] + nkb4(bin(b64alp.index(c[3]))[2:], 6)[:6]",
  "",
  "",
  "",
  "",
  "",
  "",
  "def nkb2(c, p):",
  "q = []",
  "for w in c:q.append(b64alp.index(w))",
  "for i in range(0, p):q.append(0)",
  "e = ''",
  "for w in q:e += nkb4(bin(w)[2:], 6)[:6]",
  "return e",
  "",
  "",
  "",
  "",
  "",
  "",
  "def nke2(a):",
  "q = ''",
  "w = a.count('=')",
  "a = a.replace('=', '')",
  "for e in range(0, len(a), 4): q += nkb1(a[e:e+4]) if len(a[e:e+4]) == 4 else nkb2(a[e:e+4], w)",
  "r = bytes([int(q[bits:bits+8], 2) for bits in range(0, len(q), 8)]).decode('utf8')",
  "if w > 0: r = r[:-w]",
  "return r",
  "",
  "",
  "",
  "",
  "",
  "",
  "def nkb3(a):",
  "global b64alp",
  "b64alp = a",
  "",
  "",
  "",
  "",
  "",
  "",
  "def nke1(a):",
  "global b64alp",
  "a = a.encode('utf8')",
  "a = ''.join([nkb4(bin(e)[2:], 8) for e in a])",
  "a = a + '0' * (len(a) % 6)",
  "a = [a[e:e+6] for e in range(0, len(a), 6)]",
  "a = [int(e, 2) for e in a]",
  "a = ''.join([b64alp[e] for e in a])",
  "a = a + '=' * (len(a) % 4)",
  "return a",
  "",
  "",
  "",
  "",
  "",
  "",
  "kmt1 = \"\"",
  "def kmt2(a):",
  "global kmt1",
  "kmt1 += str(a) + \"\\n\"",
  "",
  "",
  "",
  "def kmt3(b):",
  "global print, kmt1",
  "kmt1 = \"\"",
  "d = print",
  "d(\"@=!@NKM0SPITER]!@\")",
  "c = nke2(b)",
  "",
  "print = kmt2",
  "exec(c)",
  "print = d",
  "",
  "print(nke1(kmt1))",
  "print(\"@=!@NKM1SPITER]!@\")",
  "",
  "",
  "",
  "",
  "def r(b):",
  "global print",
  "d = print",
  "try: kmt3(b)",
  "finally: print = d",
  "",
  "",
  "",
  ""
]